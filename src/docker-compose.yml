services:
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: wave
      POSTGRES_PASSWORD: ***REMOVED***
      POSTGRES_DB: wave
    ports:
      - "5432:5432"
    volumes:
      - pgdata_final:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - npm-data:/data
      - npm-letsencrypt:/etc/letsencrypt

  orchestrator:
    build:
      context: ./orchestrator
    image: wave-orchestrator
    env_file:
      - .env
    ports:
      - "5050:5050"
      - "5025:5025"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./orcestrater_data:/data
    environment:
      - APPLICATION_ROOT=/admin
      - WERKZEUG_PROXY_FIX=1

  frontend:
    build:
      context: ./frontend
    image: frontend-prototype
    env_file:
      - .env
    ports:
      - "5000:5000"

volumes:
  pgdata_final:
  npm-data:
  npm-letsencrypt:

